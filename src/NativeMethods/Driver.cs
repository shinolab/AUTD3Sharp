// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;
using AUTD3Sharp.Utils;
using AUTD3Sharp.Link;


namespace AUTD3Sharp.NativeMethods
{
    internal static unsafe partial class NativeMethodsDriver
    {
        const string __DllName = "autd3capi_driver";

        internal const uint NUM_TRANS_IN_UNIT = 249;
        internal const uint NUM_TRANS_IN_X = 18;
        internal const uint NUM_TRANS_IN_Y = 14;
        internal const float TRANS_SPACING_MM = 10.16f;
        internal const float DEVICE_HEIGHT_MM = 151.4f;
        internal const float DEVICE_WIDTH_MM = 192f;



    }

    [StructLayout(LayoutKind.Explicit)]
    internal unsafe partial struct DebugTypeValue
    {
        [FieldOffset(0)]
        public ulong @null;
        [FieldOffset(0)]
        public ulong sys_time;
        [FieldOffset(0)]
        public ushort idx;
        [FieldOffset(0)]
        [MarshalAs(UnmanagedType.U1)] public bool direct;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct DebugTypeWrap
    {
        public DebugTypeTag ty;
        public ulong value;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct LoopBehavior
    {
        public ushort rep;
    }

    [StructLayout(LayoutKind.Explicit)]
    internal unsafe partial struct TransitionModeValue
    {
        [FieldOffset(0)]
        public ulong @null;
        [FieldOffset(0)]
        public ulong sys_time;
        [FieldOffset(0)]
        public byte gpio_in;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct TransitionModeWrap
    {
        public TransitionModeTag tag;
        public TransitionModeValue value;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct ConstPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct ControllerPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct SenderPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct DatagramPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct GainPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct ResultGain
    {
        public GainPtr result;
        public uint err_len;
        public ConstPtr err;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct GeometryPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct DevicePtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct TransducerPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct LinkPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct ResultLink
    {
        public LinkPtr result;
        public uint err_len;
        public ConstPtr err;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct ModulationPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct ResultModulation
    {
        public ModulationPtr result;
        public uint err_len;
        public ConstPtr err;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct FociSTMPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct GainSTMPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct ResultStatus
    {
        public AUTDStatus result;
        public uint err_len;
        public ConstPtr err;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct ResultSamplingConfig
    {
        public SamplingConfig result;
        public uint err_len;
        public ConstPtr err;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct SleeperWrap
    {
        public SleeperTag tag;
        public uint value;
        public SpinStrategyTag spin_strategy;
    }


    internal enum DebugTypeTag : byte
    {
        None = 0,
        BaseSignal = 1,
        Thermo = 2,
        ForceFan = 3,
        Sync = 4,
        ModSegment = 5,
        ModIdx = 6,
        StmSegment = 7,
        StmIdx = 8,
        IsStmMode = 9,
        PwmOut = 10,
        Direct = 11,
        SysTimeEq = 12,
    }

    internal enum TransitionModeTag : byte
    {
        SyncIdx = 0,
        SysTime = 1,
        Gpio = 2,
        Ext = 3,
        Immediate = 4,
        None = 255,
    }

    internal enum AUTDStatus : byte
    {
        AUTDTrue = 0,
        AUTDFalse = 1,
        AUTDErr = 2,
    }

    internal enum SleeperTag : byte
    {
        Std = 0,
        Spin = 1,
        Waitable = 3,
    }

    internal enum SpinStrategyTag : byte
    {
        YieldThread = 0,
        SpinLoopHint = 1,
    }


}
