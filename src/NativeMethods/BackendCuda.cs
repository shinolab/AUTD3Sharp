// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;


namespace AUTD3Sharp.NativeMethods
{
    public static unsafe partial class NativeMethodsBackendCuda
    {
        const string __DllName = "autd3capi_backend_cuda";



        [DllImport(__DllName, EntryPoint = "AUTDCUDABackend", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern ResultBackend AUTDCUDABackend();

        [DllImport(__DllName, EntryPoint = "AUTDCUDABackendDelete", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void AUTDCUDABackendDelete(BackendPtr backend);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDASDP", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDASDP(BackendPtr backend, double* points, double* amps, ulong size);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDASDPWithConstraint", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDASDPWithConstraint(GainPtr holo, EmissionConstraintPtr constraint);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDASDPWithAlpha", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDASDPWithAlpha(GainPtr holo, double alpha);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDASDPWithLambda", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDASDPWithLambda(GainPtr holo, double lambda);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDASDPWithRepeat", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDASDPWithRepeat(GainPtr holo, uint repeat);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDAGS", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDAGS(BackendPtr backend, double* points, double* amps, ulong size);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDAGSWithConstraint", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDAGSWithConstraint(GainPtr holo, EmissionConstraintPtr constraint);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDAGSWithRepeat", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDAGSWithRepeat(GainPtr holo, uint repeat);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDAGSPAT", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDAGSPAT(BackendPtr backend, double* points, double* amps, ulong size);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDAGSPATWithConstraint", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDAGSPATWithConstraint(GainPtr holo, EmissionConstraintPtr constraint);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDAGSPATWithRepeat", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDAGSPATWithRepeat(GainPtr holo, uint repeat);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDANaive", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDANaive(BackendPtr backend, double* points, double* amps, ulong size);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDANaiveWithConstraint", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDANaiveWithConstraint(GainPtr holo, EmissionConstraintPtr constraint);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDAGreedy", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDAGreedy(double* points, double* amps, ulong size);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDAGreedyWithConstraint", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDAGreedyWithConstraint(GainPtr holo, EmissionConstraintPtr constraint);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDAGreedyWithPhaseDiv", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDAGreedyWithPhaseDiv(GainPtr holo, uint div);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDALM", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDALM(BackendPtr backend, double* points, double* amps, ulong size);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDALMWithConstraint", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDALMWithConstraint(GainPtr holo, EmissionConstraintPtr constraint);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDALMWithEps1", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDALMWithEps1(GainPtr holo, double eps);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDALMWithEps2", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDALMWithEps2(GainPtr holo, double eps);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDALMWithTau", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDALMWithTau(GainPtr holo, double tau);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDALMWithKMax", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDALMWithKMax(GainPtr holo, uint k_max);

        [DllImport(__DllName, EntryPoint = "AUTDGainHoloCUDALMWithInitial", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GainPtr AUTDGainHoloCUDALMWithInitial(GainPtr holo, double* initial_ptr, ulong len);


    }



}
    