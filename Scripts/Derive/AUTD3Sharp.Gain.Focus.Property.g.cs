// <auto-generated/>

#if UNITY_2020_2_OR_NEWER
#nullable enable
#endif

using System;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;

namespace AUTD3Sharp.Gain {
    public partial class Focus
    {
        
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        [ExcludeFromCodeCoverage]
        public Focus WithIntensity(global::AUTD3Sharp.EmitIntensity value)
        {
           Intensity = value;
           return this;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        [ExcludeFromCodeCoverage]
        public Focus WithIntensity(byte value)
        {
           Intensity = new EmitIntensity(value);
           return this;
        }
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        [ExcludeFromCodeCoverage]
        public Focus WithPhaseOffset(global::AUTD3Sharp.Phase value)
        {
           PhaseOffset = value;
           return this;
        }

        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        [ExcludeFromCodeCoverage]
        public Focus WithPhaseOffset(byte value)
        {
           PhaseOffset = new Phase(value);
           return this;
        }
    }   
}

#if UNITY_2020_2_OR_NEWER
#nullable restore
#endif
