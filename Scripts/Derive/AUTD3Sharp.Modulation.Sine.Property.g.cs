// <auto-generated/>

#if UNITY_2018_3_OR_NEWER
#define USE_SINGLE
#endif

#if UNITY_2020_2_OR_NEWER
#nullable enable
#endif

#if USE_SINGLE
using float_t = System.Single;
#else
using float_t = System.Double;
#endif

using System;
using System.Diagnostics.CodeAnalysis;

namespace AUTD3Sharp.Modulation {
    public partial class Sine
    {
        
        public Sine WithIntensity(global::AUTD3Sharp.EmitIntensity value)
        {
           Intensity = value;
           return this;
        }

        [ExcludeFromCodeCoverage] public Sine WithIntensity(byte value)
        {
           Intensity = new EmitIntensity(value);
           return this;
        }
        public Sine WithOffset(global::AUTD3Sharp.EmitIntensity value)
        {
           Offset = value;
           return this;
        }

        [ExcludeFromCodeCoverage] public Sine WithOffset(byte value)
        {
           Offset = new EmitIntensity(value);
           return this;
        }
        public Sine WithPhase(global::AUTD3Sharp.Phase value)
        {
            Phase = value;
            return this;
        }
        public Sine WithMode(global::AUTD3Sharp.SamplingMode value)
        {
            Mode = value;
            return this;
        }
    }   
}