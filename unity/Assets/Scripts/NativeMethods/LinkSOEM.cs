// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;
using AUTD3Sharp.Utils;
using AUTD3Sharp.Link;


namespace AUTD3Sharp.NativeMethods
{
    public static unsafe partial class NativeMethodsLinkSOEM
    {
        const string __DllName = "autd3capi_link_soem";



        [DllImport(__DllName, EntryPoint = "AUTDAdapterPointer", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern EthernetAdaptersPtr AUTDAdapterPointer();

        [DllImport(__DllName, EntryPoint = "AUTDAdapterGetSize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern uint AUTDAdapterGetSize(EthernetAdaptersPtr adapters);

        [DllImport(__DllName, EntryPoint = "AUTDAdapterGetAdapter", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void AUTDAdapterGetAdapter(EthernetAdaptersPtr adapters, uint idx, byte* desc, byte* name);

        [DllImport(__DllName, EntryPoint = "AUTDAdapterPointerDelete", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void AUTDAdapterPointerDelete(EthernetAdaptersPtr adapters);

        [DllImport(__DllName, EntryPoint = "AUTDLinkSOEMTracingInit", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void AUTDLinkSOEMTracingInit();

        [DllImport(__DllName, EntryPoint = "AUTDLinkSOEMTracingInitWithFile", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern ResultStatus AUTDLinkSOEMTracingInitWithFile(byte* path);

        [DllImport(__DllName, EntryPoint = "AUTDLinkSOEM", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern ResultSyncLinkBuilder AUTDLinkSOEM(byte* ifname, uint buf_size, ulong send_cycle_ns, ulong sync0_cycle_ns, ConstPtr err_handler, ConstPtr err_context, SyncMode mode, ProcessPriority process_priority, ThreadPriorityPtr thread_priority, ulong state_check_interval_ns, TimerStrategy timer_strategy, ulong tolerance_ns, ulong sync_timeout_ns);

        [DllImport(__DllName, EntryPoint = "AUTDLinkSOEMIsDefault", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        public static extern bool AUTDLinkSOEMIsDefault(uint buf_size, ulong send_cycle_ns, ulong sync0_cycle_ns, SyncMode mode, ProcessPriority process_priority, ThreadPriorityPtr thread_priority, ulong state_check_interval_ns, TimerStrategy timer_strategy, ulong tolerance_ns, ulong sync_timeout_ns);

        [DllImport(__DllName, EntryPoint = "AUTDLinkSOEMStatusGetMsg", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern uint AUTDLinkSOEMStatusGetMsg(Status src, byte* dst);

        [DllImport(__DllName, EntryPoint = "AUTDLinkRemoteSOEM", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern ResultSyncLinkBuilder AUTDLinkRemoteSOEM(byte* addr);

        [DllImport(__DllName, EntryPoint = "AUTDLinkSOEMThreadPriorityMin", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern ThreadPriorityPtr AUTDLinkSOEMThreadPriorityMin();

        [DllImport(__DllName, EntryPoint = "AUTDLinkSOEMThreadPriorityCrossplatform", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern ThreadPriorityPtr AUTDLinkSOEMThreadPriorityCrossplatform(byte value);

        [DllImport(__DllName, EntryPoint = "AUTDLinkSOEMThreadPriorityMax", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern ThreadPriorityPtr AUTDLinkSOEMThreadPriorityMax();


    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct EthernetAdaptersPtr
    {
        public IntPtr Item1;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct ThreadPriorityPtr
    {
        public IntPtr Item1;
    }


    public enum Status : byte
    {
        Error = 0,
        StateChanged = 1,
        Lost = 2,
    }


}
